
1,安装
* 编译和安装依赖库
(1) libevent
依赖libevent库,先安装这个库。
最好到http://libevent.org/下载最新版的libevent库，到2013/12/16日为止，最新版本是2.0.21

tar xzvf libevent-2.0.21-stable.tar.gz
cd libevent-2.0.21-stable
./configure
make
sudo make install
说明：make install完成后，该库会在/usr/local/lib/，需要做一个连接到/usr/lib/
cd /usr/lib/
ln -s /usr/local/lib/libevent-2.0.so.5.1.9 libevent-2.0.so.5.1.9


(2) tc_malloc内存管理库
这个也最好到网站:https://code.google.com/p/gperftools/下载最新的库，然后安装。

* 编译dmagent
make
会生成一个dmagent的执行文件


2, 启动命令
	./dmagent -u root -n 51200 -p $ma_port -c magent.conf
(1) 其中的magent.conf是配置文件，其中是ip地址列表,配置文件有个例子，按照这个格式修改就可以了。
(2) ./dmagent -h可以查看参数的意义
(3) 源码目录中有一个startme.sh的脚本可以参考其中的启动命令

3,日志文件
(1) 会在/tmp/目录下生成一个日志文件：dmagent.log，只有错误的时候才记录。目前该日志文件的位置不能配置，以后可改成可配置的。
(2) testme 是一个测试脚本文件夹，不过该脚本依赖于memcache.py的这个python包。

4, 关于连接数 
(1) 连接数目前默认的是4096，而且对于已经连接上的客户端没有超时机制，所以，若没法使用长连接，那么在使用完一个连接时，记住关闭该连接。


2013/12/11
1, 添加了内存管理模块，使用了第3方的tc_malloc来进行内存管理，提高了性能。
2, 在集群中添加机器，删除机器时都记录该机器的ip地址。
3, 添加了common.h作为tcmalloc的头文件。

* 如何安装和使用tc_malloc
(1) 安装
　　tcmalloc在gperftools之中，故想要使用tcmalloc，就得先安装gperftools。在linux下，其安装步骤如下：
　　1. tar xzvf gperftools-2.1.tar.gz
　　2. cd gperftools-2.1
　　3. ./configure --enable-frame-pointers
　　4. make
　　5. make install
　　这里需要注意一点，在linux下，如果直接./configure，那么make时会报出编译
	错误：error Cannot calculate stack trace: will need to write for your environment。
	解决方法如上所示，在configure时加入选项--enable-frame-pointers。
　　如果想定制化安装，请自行参阅gperftools的安装文档，即源码包中的INSTALL文件。
 
(2) 使用

对于tcmalloc的使用，还是用程序来说明吧。
tcmalloc_sample.c:

#include <stdio.h>
#include <google/tcmalloc.h>

int main()
{
	char *cp = (char *)tc_malloc(23 * sizeof(char));
	tc_free(cp);
	cp = NULL;
	return 0;
}
注：一下的步骤都是以第一部分所述的安装方式为前提而进行的。
1. 编译：gcc -o tcmalloc_sample -g tcmalloc_sample.cpp -ltcmalloc
